name: Release and Publish

on:
  push:
    tags:
      - 'v*'

jobs:
  release-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'

    - name: Verify tag version matches package.json
      run: |
        TAG_VERSION=${GITHUB_REF#refs/tags/v}
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
          exit 1
        fi

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test
      continue-on-error: true

    - name: Build
      run: npm run build

    - name: Type check
      run: npm run typecheck

    - name: Generate release notes
      id: release_notes
      run: |
        # Get the previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        CURRENT_TAG=${GITHUB_REF#refs/tags/}
        
        echo "## What's Changed" > release_notes.md
        echo "" >> release_notes.md
        
        if [ -n "$PREVIOUS_TAG" ]; then
          # Get commit messages between tags
          git log ${PREVIOUS_TAG}..${CURRENT_TAG} --pretty=format:"- %s (%an)" >> release_notes.md
          
          echo "" >> release_notes.md
          echo "" >> release_notes.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREVIOUS_TAG}...${CURRENT_TAG}" >> release_notes.md
        else
          # First release
          git log --pretty=format:"- %s (%an)" >> release_notes.md
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          LICENSE
          README.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Upload npm package to release
      run: |
        npm pack
        PACKAGE_FILE=$(ls *.tgz)
        echo "package_file=$PACKAGE_FILE" >> $GITHUB_ENV

    - name: Attach package to release
      uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.package_file }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}